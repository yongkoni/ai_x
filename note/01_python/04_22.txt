9장 파일 io(입/출력) 프로그래밍

파일 : txt, pickle, csv, json, hdf5(h5)

1절 txt파일에 데이터 저장하고 불러오기
	mode : 'r' 또는 'rt' : text열기 모드
       	          'rb' : 바이너리 읽기 모드
       	          'w' 또는 'wt' : text쓰기 모드 (파일이 있으면 덮어씀, 파일이 없으면 파일 생성)
       	          'wb' : 바이너리 쓰기 모드
       	          'a' 또는 'at' : text 추가 모드 (파일이 있으면 append, 파일이 없으면 파일 생성)
       	          읽기모드에서는 파일이 없으면 예외/쓰기모드에서는 폴더가 없으면 예외
	encoding :
    		euc-kr (한글완성형) 믜X
   		cp949 (확장된 한글완성형) : open()함수 기본 encoding방식(win)
    		utf-8 (한글조합형): open()함수 기본 encoding방식(mac, linux), 주피터노트북 기본

	쓰는 방법 1. write 이용 
		     f.write('홍길동, 33, 아무동9\n')
		 2. for문 이용
		     textlist = ['홍길동, 33, 아무동9\n']
		     for line in textlist :
        			f.write(line)
		 3. writelines 이용
		     textlist = ['홍길동, 33, 아무동9\n']
		     f.writelines(textlist)
	읽는 방법 1. 한줄씩 읽기 : 반복문 사용 및 .readline()
		 2 : 모든 줄 읽기 : .readlines()
		 3 : 모두 읽기 : .read()

2절 피클을 이용한 객체 저장 및 불러오기
	형식이 있는 txt 데이터 불러오기
		1. 한 라인씩 읽기
 		2. 한 라인을 콤마(,)등의 구분자(delimiter)로 분리(split)하기
 		3. 자료형 변환하기
 		4. NA또는 없는 필드에 대한 예외 처리하기
	피클링  import pickle
		저장 : pickle.dump()
		읽기 : pickle.load()

3절 CSV 형식 파일 읽기/쓰기
	CSV파일 ↔ 리스트데이터로 읽기/쓰기
	CSV파일 ↔ 딕셔너리데이터 읽기/쓰기
	reader : reader = csv.reader(f, quoting = csv.QUOTE_NONNUMERIC)
	writer : writer = csv.writer(f)
	          writer.writerows(user_list)  CSV형 리스트가 저장된 객체를 파일에 쓸 때 사용
	DictReader : dict_reader = csv.DictReader(f, 
					    fieldnames = ['Name', 'Age', 'Email', 'Address', 'Job']
					    restkey = 'Job')
	 DictWriter : dict_writer = csv.DictWriter(f, fieldnames = fieldnames)

4절 JSON 데이터 저장하고 불러오기 (dump, load)
	딕셔너리리스트 ↔ JSON 파일(기본)
	객체리스트 ↔ JSON 파일
		ensure_ascii 매개변수
    			True : 비 ASCII문은 유니코드 형태로 저장
    			False : 비 ASCII문자 원래 형태로 저장
	dump(파일 출력)
		json.dump(member_list,
             	 	jsonfile,
             	 	ensure_ascii = False,
             	 	indent = '\t',
             	 	default = Member.as__dic__)
            load(파일 입력)
		load_data = json.load(f)
		load_member_list = json.load(f, object_hook = as_member)