# ex1. 다음 코드를 실행했을 때 출력되는 것은?
L1 = ("orange", "apple", "banana", "kiwi")
new_list=[i for i in L1 if len(i) > 5]
print(new_list)

['orange', 'banana']

# ex2. 다음 코드와 실행결과가 잘못 짝지어진 것은?
① print(list(range(10))) - [0,1,2,3,4,5,6,7,8,9]
② print(list(range(5,10))) - [5,6,7,8,9]
③ print(list(range(10,0,-1))) - [9,8,7,6,5,4,3,2,1,0]
④ print(list(range(10,20,2))) – [10,12,14,16,18]

③ [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]이 나와야 합니다

# ex3. 다음 구문에 의해 출력되는 것은?
numbers_2d = [ [1,2,3,4,5], [10,20,30,40],[1,3,5],[2,] ]
len(numbers_2d[3])

1

# ex4. 다음 코드의 실행결과가 나올 수 있는 빈칸에 들어갈 함수 이름은?
numbers = [1,2,3,4,5]
numbers.extend([10,20,30,40,50])
numbers

[1, 2, 3, 4, 5, 10, 20, 30, 40, 50]

# ex5. 다음 구문을 실행할 때 결과는?
numbers = list(range(10))
numbers[::2]= [0] * len(numbers[::2])
print(numbers)

[0, 1, 0, 3, 0, 5, 0, 7, 0, 9]

# ex6. 다음 구문을 실행할 때 결과는?
numbers = [0,1,2,3,4,5,6,7,8,9]
numbers[::2] = numbers[5:]
print(numbers)

[5, 1, 6, 3, 7, 5, 8, 7, 9, 9]

# ex7. 다음 구문을 실행할 때 결과는?
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
numbers[::2] =  numbers[:5]
print(numbers)

[0, 1, 1, 3, 2, 5, 3, 7, 4, 9]

# ex8. 다음 데이터에서 10을 출력할 수 없는 구문은?
my_dic = {“a”:10, “b”:20, “c”:30}
① my_dic[0]
② my_dic[‘a’]
③ list(my_dic.items())[0][1]
④ list(my_dic.values())[0]
⑤ my_dic.get(‘a’)

①

# ex9. 다음 프로그램의 결과를 출력하시오
fruits = ['apple', 'banana', 'orange']
x, y, z = fruits
print(x)
print(y)
print(z)

apple
banana
orange

# ex10. 다음 프로그램의 결과를 출력하시오
fruits = ['apple', 'banana', 'orange']
print(len(fruits))

3

# ex11. 파이썬에서 함수를 만들기 위해 선언하는 단어는?

def